(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{445:function(a,s,t){a.exports=t.p+"assets/img/mac-finder.b99686e1.png"},471:function(a,s,t){"use strict";t.r(s);var e=t(7),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"mac-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-setup"}},[a._v("#")]),a._v(" Mac Setup")]),a._v(" "),e("p",[a._v("Mac은 우분투와는 다르게 처음부터 다시 셋팅한 경험은 거의 없다. 또한 개인적인 생각으로 Mac은 초기 셋팅을 많이 하지 않아도 불편하지 않게 쓸수 있다고 생각한다. 그래서 꼭 필요한 것 보다는 작은 팁들과 프로그램들로 정리하고자 한다.")]),a._v(" "),e("h2",{attrs:{id:"_1-finder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-finder"}},[a._v("#")]),a._v(" 1. Finder")]),a._v(" "),e("p",[e("img",{attrs:{src:t(445),alt:"Mac finder"}})]),a._v(" "),e("p",[a._v("사용하는 프로그램의 아이콘을 "),e("code",[a._v("⌘")]),a._v(" 을 누른 상태에서, finder 좌상단으로 가져가면 프로그램 아이콘이 고정된다. 고정된 아이콘에 폴더를 가져가면 해당 경로로 프로그램을 바로 실행할 수 있다. 터미널에 가면 해당 경로에서 터미널이 열리고, VSCode로 가져가면 해당 폴더를 VSCode에서 실행한다.")]),a._v(" "),e("h2",{attrs:{id:"_2-terminal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-terminal"}},[a._v("#")]),a._v(" 2. Terminal")]),a._v(" "),e("p",[a._v("Finder와 유사하게 터미널에서 보고 있는 경로를 바로 열고 싶을때가 많다. 이럴때를 대비해서 아래처럼 alias를 만들어 놓는다.")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## GitKraken")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("alias")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("kraken")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"open -na 'GitKraken' --args -p "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("다행이도 VSCode와 finder는 설정없이다 된다.")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Finder")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## VSCode")]),a._v("\ncode "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h2",{attrs:{id:"_3-shortcut"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-shortcut"}},[a._v("#")]),a._v(" 3. Shortcut")]),a._v(" "),e("p",[a._v("단축키를 만들때 별도 프로그램을 설치하기 싫어서 AppleScript를 사용한다. 아래는 가끔씩 우분투처럼 터미널을 열고 싶을때 사용하는 방식이다.")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Automator")]),a._v("\non run "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("input, parameters"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\ttell application "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"iTerm"')]),a._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" it is running "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n\t\tend "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v("\n\t\tactivate\n\tend tell\nend run\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("p",[a._v("아래아 같은 스크립트를 저장한 뒤에, "),e("code",[a._v("System Preferences > Keyboard > Shortcut > Service")]),a._v("에서 단축키로 "),e("code",[a._v("⌘ + ^ + T")]),a._v("로 설정했다. 물론 "),e("code",[a._v("⌘ + space")]),a._v("를 하여 iterm을 검색해서 켜도 되지만, 그냥 ubuntu를 사용하던 습관 그대로 하고 싶을때가 있다.")]),a._v(" "),e("h2",{attrs:{id:"사용중인-앱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#사용중인-앱"}},[a._v("#")]),a._v(" 사용중인 앱")]),a._v(" "),e("h3",{attrs:{id:"spectacle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spectacle"}},[a._v("#")]),a._v(" Spectacle")]),a._v(" "),e("p",[a._v("Window나 Ubuntu처럼 창을 정리할 떄 정말 좋은 앱.")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.spectacleapp.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.spectacleapp.com/"),e("OutboundLink")],1)])]),a._v(" "),e("h3",{attrs:{id:"allkdic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#allkdic"}},[a._v("#")]),a._v(" Allkdic")]),a._v(" "),e("p",[a._v("영어 단어 사전을 작은 화면에서 빠르게 검색해볼 수 있는 간편 앱. "),e("code",[a._v("⇧ + ⌘ + space")]),a._v("로 단축키를 설정하여 사용중.")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://allkdic.xoul.kr/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://allkdic.xoul.kr/"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);